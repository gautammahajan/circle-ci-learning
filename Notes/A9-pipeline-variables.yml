There are two types of pipeline variables

1. Pipeline values
2. Pipeline parameters

similar to job/build info, pipeline info

pipeline.id--------------------------->A globally unique id representing for the pipeline
pipeline.number--------------------------->A project unique integer id for the pipeline
pipeline.project.git_url--------------------------->The URL where the current project is hosted. E.g. https://github.com/circleci/circleci-docs
pipeline.project.type--------------------------->The lower-case name of the VCS provider, E.g. “github”, “bitbucket”.
pipeline.git.tag--------------------------->The name of the git tag that was pushed to trigger the pipeline. If the pipeline was not triggered by a tag, then this is the empty string.
pipeline.git.branch--------------------------->The name of the git branch that was pushed to trigger the pipeline.
pipeline.git.revision--------------------------->The long (40-character) git SHA that is being built.


version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:latest
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    environment:
      CIRCLE_COMPARE_URL: << pipeline.project.git_url >>/compare/<< pipeline.git.base_revision >>..<<pipeline.git.revision>>
    working_directory: ~/main
    steps:
      - run: echo "This is pipeline ID << pipeline.id >>"
      - run: echo $CIRCLE_COMPARE_URL



-------------------- Pipeline parameters ----------------------

Similar to global var section
Pipeline parameters are declared using the parameters key at the top level of a .circleci/config.yml file.

version: 2.1
parameters:
  image-tag:
    type: string
    default: "latest"
  workingdir:
    type: string
    default: "~/main"

jobs:
  build:
    docker:
      - image: circleci/node:<< pipeline.parameters.image-tag >>
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    environment:
      IMAGETAG: << pipeline.parameters.image-tag >>
    working_directory: << pipeline.parameters.workingdir >>
    steps:
      - run: echo "Image tag used was ${IMAGETAG}"
      - run: echo "$(pwd) == << pipeline.parameters.workingdir >>"


Generic usage of parameters
parameters can be accepted at job level as well.






